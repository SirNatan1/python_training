Operators: Python language supports several types of operators. In this section, we will focus on few of them.
Assignment Operators: Assignment operators are used to assign values to variables. Let us take = as an example. Equal sign in mathematics shows that two values are equal, 
however in Python it means we are storing a value in a certain variable and we call it assignment or a assigning value to a variable.
Example for assignment Ops:
=     x = 5       x = 5
+=    x += 5      x = x + 5         x = 5       x = 5 + 5
-=    x -= 3      x = x - 3
*=    x *= 4      x = x * 4
&=    x &= 3      x = x & 3
To sum it up Assign Ops are used to assign a value to a var and than using the var to add/sub/multiplie... and save the result in the used var

Arithmetic Ops: regular math Ops for regular math Ops
Example Integer:
+     x + y
-     x - y
*     x * y
/     x / y
%     x % y

Integer examples:
print('Division: ', 7 / 2) -> output: Division: 3.5
print('Modulus: ', 3 % 2) -> output: Modulus: 1
print('Exponentiation: ', 2 ** 3) -> output: Exponentiation: 9
So, it'll print out the string in '' and add to the print togther with the print the sum of the operators.

Example float:  print('Floating Point Number, PI', 3.14)
Example complex:  print('Complex number: ', 1 + 1j)

Declaring a var and assign a num as data type:
a = 3
b = 2
total = a + b
diff = a - b
product = a * b
Now printing the function results:
print(total)
print('a + b = ', total)
print('a - b = ', diff)
print('a * b = ', product)

print('== Addition, Subtraction, Multiplication, Division, Modulus ==')

# Declaring values and organizing them together
num_one = 3
num_two = 4

# Arithmetic operations
total = num_one + num_two
diff = num_two - num_one

# Printing values with label
print('total: ', total)
print('difference: ', diff)


Comparison Operators
==  equal   x = y
!=  not equal   x != y
>   greater than    x > y
<   less than   x < y
>=  Greater than    x >= y
<=  lesser than     x <= y

print(2 < 3)     # True
print(2 <= 3)    # True
print(3 == 2)    # False
print(3 != 2)    # True 
print(len('mango') == len('avocado'))  # False
print(len('mango') != len('avocado'))  # True
print(len('mango') < len('avocado'))   # True
print(len('milk') != len('meat'))      # False

Another way for comparison with words:
print('1 is 1', 1 is 1)                   # True - because the data values are the same
print('1 is not 2', 1 is not 2)           # True - because 1 is not 2
print('A in Asabeneh', 'A' in 'Asabeneh') # True - A found in the string
print('B in Asabeneh', 'B' in 'Asabeneh') # False - there is no uppercase B
print('coding' in 'coding for all') # True - because coding for all has the word coding
print('a in an:', 'a' in 'an')      # True
print('4 is 2 ** 2:', 4 is 2 ** 2)   # True

Logical Operators:
and     x < 5 and x < 10
or      x > 3 or x < 8
not    not(x < 5 and x < 10)

print(3 > 2 and 4 > 3) # True - because both statements are true
print(3 > 2 and 4 < 3) # False - because the second statement is false
print('True and True: ', True and True)
print(3 > 2 or 4 > 3)  # True - because both statements are true
print(not 3 > 2)     # False - because 3 > 2 is true, then not True gives False
print(not True)      # False - Negation, the not operator turns true to false
print(not False)     # True
